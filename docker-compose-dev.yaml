version: "3.7"

services:


  #security:
  #  build:
  #    context: ../security-ms
  #    dockerfile: Dockerfile
  #  restart: always
  #  ports:
  #    - "8120:8120"
  #  depends_on:
  #    - naming-server
  #  networks:
  #    - internal-network
  #  environment:
  #    EUREKA.CLIENT.SERVICE-URL.DEFAULTZONE: http://localhost:8761/eureka
  #    DB_URL: 'jdbc:mysql://localhost:3306/db'
  #    DB_USER: 'user'
  #    DB_PASSWORD: 'password'
  #    JWT_SECRET: ''
  #    JWT_TOKEN_VALIDITY: 480
  #    HOST_WEBSITE: ''

  cuentamovimiento:
    build:
      context: ./Cuenta-Movimiento
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8140:8140"
    depends_on:
      - naming-server
    networks:
      - internal-network
    environment:
      EUREKA.CLIENT.SERVICE-URL.DEFAULTZONE: http://localhost:8761/eureka
      DB_URL: 'jdbc:mysql://localhost:3306/db'
      DB_USER: 'user'
      DB_PASSWORD: 'password'
  clientepersona:
    build:
      context: ./Cliente-Persona
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8130:8130"
    environment:
      DB_URL: jdbc:postgresql://host.docker.internal:5432/postgres?sslmode=disable
    depends_on:
      - naming-server
      - postgres
    networks:
      - internal-network


  api-gateway:
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8765:8765"
    networks:
      - internal-network
    depends_on:
      - naming-server

    environment:
      EUREKA.CLIENT.SERVICE-URL.DEFAULTZONE: http://host.docker.internal:8761/eureka
      SECURITY_MS: 'http://security:8120'

  naming-server:
    build:
      context: ./naming
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8761:8761"
    networks:
      - internal-network
    depends_on:

      - postgres
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    #db:
    #image: mysql:5.7
    #restart: always
    #healthcheck:
      #  test: [ "CMD", "curl", "-f", "http://localhost:3306" ]
      #interval: 10s
      #timeout: 10s
      #retries: 5
      #environment:
      #MYSQL_ROOT_HOST: "localhost"
      #MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      #MYSQL_USER: 'user'
      # You can use whatever password you like
      #MYSQL_PASSWORD: 'password'
      # Password for root access
      #MYSQL_ROOT_PASSWORD: 'password'
      #ports:
      # <Port exposed> : <MySQL Port running inside container>
      #- '3306:3306'
      #expose:
      # Opens port 3306 on the container
      #- '3306'
      # Where our data will be persisted
      #volumes:
      #- my-db:/var/lib/mysql
# Names our volume
volumes:
  my-db:
networks:
  internal-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
